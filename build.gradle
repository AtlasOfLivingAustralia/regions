buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

version "3.4"
group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:'maven-publish'
apply from: "${project.projectDir}/gradle/publish.gradle"

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.grails:grails-core"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:cache-ehcache:3.0.0"
    console "org.grails:grails-console"
    compile "org.grails:grails-datastore-gorm:${gormVersion}"
    compile 'org.grails.plugins:external-config:2.0.0'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'

    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"

    testCompile "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testCompile "org.grails:grails-web-testing-support"
    profile "org.grails.profiles:web"

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    compile 'com.nerderg.ajaxanywhere:ajaxanywhere:2.1.1'
    compile "net.sf.ehcache:ehcache-core:2.4.6"
    compile "commons-httpclient:commons-httpclient:3.1"

    compile "org.grails.plugins:ala-auth:5.1.1"
    compile "org.grails.plugins:ala-admin-plugin:2.3.0"
    runtime "org.grails.plugins:ala-bootstrap3:4.1.0"
}

webdriverBinaries {
    chromedriver '2.45.0'
    geckodriver '0.24.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    sourceResources sourceSets.main
}

assets {
    minifyJs = true
    minifyCss = true
}
